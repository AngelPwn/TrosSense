package com.trossense;

import java.util.ArrayList;
import java.util.Vector;

/* loaded from: classes3.dex */
public class dj implements dh {
    static int[] e;
    private static ArrayList f;
    private static int i;
    private static Vector m;
    private static Object o;
    private long a;
    private dh c;
    private long d;
    private static int h = 52;
    private static int n = 17;
    private static int l = 128;
    private static long[] k = new long[64];
    private int[] b = e;
    private long[] j = k;

    static {
        long j = 1;
        for (int i2 = 0; i2 < 64; i2++) {
            k[i2] = j;
            j <<= 1;
        }
        o = new Object();
        m = new Vector();
        f = new ArrayList();
        a0();
        i = f.size();
        c();
    }

    private dj(long j) {
        this.a = j;
    }

    private long a(int i2) {
        return a(0, i2 - 1);
    }

    private long a(int i2, int i3) {
        return a(this.a, i2, i3, this.b, this.j);
    }

    private static long a(long j, int i2, int i3, int[] iArr, long[] jArr) {
        int length = iArr.length;
        long j2 = 0;
        for (int i4 = 0; i4 < length; i4++) {
            long j3 = j & k[i4];
            int i5 = iArr[i4];
            if (j3 != 0) {
                if (i5 > 0) {
                    j3 >>>= i5;
                } else if (i5 < 0) {
                    j3 <<= (~i5) + 1;
                }
                j2 |= j3;
            }
        }
        int i6 = 63 - i3;
        if (i6 > 0) {
            j2 <<= i6;
        }
        int i7 = ((i2 + 64) - 1) - i3;
        return i7 > 0 ? j2 >>> i7 : j2;
    }

    public static dh a(long j, long j2, Object obj) {
        di.a(j > 0);
        dh a = di.a(d(j), d(j2));
        if (obj != null) {
            m.add(obj);
        }
        return a;
    }

    private static void a(int i2, int i3, int i4, ArrayList arrayList, ArrayList arrayList2) {
        int i5;
        dh dhVar;
        int i6 = i3 + 1;
        for (int i7 = i2; i7 <= i4; i7++) {
            arrayList2.set(i7, arrayList.get(i7));
        }
        int i8 = i6;
        int i9 = i2;
        while (i2 <= i3 && i8 <= i4) {
            if (((dh) arrayList2.get(i2)).b((dh) arrayList2.get(i8))) {
                i5 = i2 + 1;
                dhVar = (dh) arrayList2.get(i2);
            } else {
                i5 = i2;
                dhVar = (dh) arrayList2.get(i8);
                i8++;
            }
            arrayList.set(i9, dhVar);
            i9++;
            i2 = i5;
        }
        while (i2 <= i3) {
            arrayList.set(i9, arrayList2.get(i2));
            i9++;
            i2++;
        }
    }

    private static void a(int i2, int i3, ArrayList arrayList, ArrayList arrayList2, int i4) {
        if (i2 < i3) {
            int i5 = ((i3 - i2) / 2) + i2;
            int i6 = i4 + 1;
            if (i6 < n) {
                a(i2, i5, arrayList, arrayList2, i6);
                a(i5 + 1, i3, arrayList, arrayList2, i6);
            }
            a(i2, i5, i3, arrayList, arrayList2);
        }
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public static void a(di diVar) {
        i = f.size();
        c();
        diVar.d();
    }

    private static void a0() {
        e = new int[]{-56, -59, -36, -18, -19, -4, -52, -45, -41, 4, -38, -42, -20, -34, -23, -46, -35, -8, -28, -15, -39, 18, -6, 19, -2, 8, 2, -23, 6, -1, 1, -8, 20, -10, 15, -28, -21, 23, 36, 8, -1, 1, -3, 10, -11, 3, 28, 34, 38, 41, 23, 35, 45, 42, -8, 11, 56, 21, 52, 39, 59, 46, 8, 28};
        f.add(new dj(9006755750321531169L));
        f.add(new dj(-1656229145674591218L));
        f.add(new dj(8988741454890215778L));
        f.add(new dj(-3284449457581123137L));
        f.add(new dj(31468346219467144L));
        f.add(new dj(8006424213476718252L));
        f.add(new dj(-5579138520227698049L));
        f.add(new dj(-8543291740474372978L));
        f.add(new dj(5344728284949565278L));
        f.add(new dj(-4913730039878279920L));
        f.add(new dj(1341307362935332996L));
        f.add(new dj(-6448238766017742203L));
        f.add(new dj(6349732418372745234L));
        f.add(new dj(-3564056885796368627L));
        f.add(new dj(-7816480597978668095L));
        f.add(new dj(2852158872371103192L));
        f.add(new dj(5159647445982919177L));
        f.add(new dj(-1018823943639763318L));
        f.add(new dj(4756479185265881133L));
        f.add(new dj(678781663732081849L));
        f.add(new dj(9038057516052529753L));
        f.add(new dj(2391811709250196053L));
        f.add(new dj(7808971879590993377L));
        f.add(new dj(-8778318870388913974L));
        f.add(new dj(-1027867669763105454L));
        f.add(new dj(4904786918778703837L));
        f.add(new dj(3688881019429392476L));
        f.add(new dj(3966765791452139172L));
        f.add(new dj(8282586994803420317L));
        f.add(new dj(6914272072338716639L));
        f.add(new dj(-740438383702399987L));
        f.add(new dj(8498619743887706850L));
        f.add(new dj(-5839677422031877052L));
        f.add(new dj(-3490565785827841971L));
        f.add(new dj(-5932678663515147775L));
        f.add(new dj(-6346612396726293118L));
        f.add(new dj(-361764520330809781L));
        f.add(new dj(-8597114556496686717L));
        f.add(new dj(-4726419890071836549L));
        f.add(new dj(-3641569585509008021L));
        f.add(new dj(2183300951346267592L));
        f.add(new dj(9090879018313465666L));
        f.add(new dj(-4723216881685312839L));
        f.add(new dj(-4048063957888993041L));
        f.add(new dj(4129769320187906575L));
        f.add(new dj(-8926977242361858532L));
        f.add(new dj(8336951955625859093L));
        f.add(new dj(4905238608381857006L));
        f.add(new dj(-7937453457445384039L));
        f.add(new dj(-3139744139633068033L));
        f.add(new dj(2812725001691596562L));
        f.add(new dj(-6539077964176458899L));
        f.add(new dj(3815020778166629162L));
        f.add(new dj(-5874203653463300536L));
        f.add(new dj(-2775509321695304324L));
        f.add(new dj(4721543176888621638L));
        f.add(new dj(8694948074729875440L));
        f.add(new dj(7877715589129450320L));
        f.add(new dj(-3004485073613118858L));
        f.add(new dj(-1563263552142922895L));
        f.add(new dj(-7708684348283467004L));
        f.add(new dj(-7560019359979840475L));
        f.add(new dj(8799972556490133451L));
        f.add(new dj(-530187469534970004L));
        f.add(new dj(-319844666923177843L));
        f.add(new dj(6196055408079875151L));
        f.add(new dj(4472779829621441566L));
        f.add(new dj(3516682342005088373L));
        f.add(new dj(8615331643100144986L));
        f.add(new dj(-4404058145264591312L));
        f.add(new dj(-5621122739353496282L));
        f.add(new dj(7293909599940410999L));
        f.add(new dj(-47553922074682405L));
        f.add(new dj(2822226161770536111L));
        f.add(new dj(-2405053278475264793L));
        f.add(new dj(-90560284736047389L));
        f.add(new dj(3223467427718869853L));
        f.add(new dj(6773421047766608323L));
        f.add(new dj(-227274059750840793L));
        f.add(new dj(-8305194739205676289L));
        f.add(new dj(9020043186262557208L));
        f.add(new dj(6159956107174347870L));
        f.add(new dj(-3848217641788885833L));
        f.add(new dj(2907442382704351923L));
        f.add(new dj(-1187113214904462138L));
        f.add(new dj(-5154225739484254532L));
        f.add(new dj(7131452984855027669L));
        f.add(new dj(2432664455327726582L));
        f.add(new dj(-734504648197122125L));
        f.add(new dj(1321607622922026294L));
        f.add(new dj(-4172428347747156720L));
        f.add(new dj(-8073641229211084667L));
        f.add(new dj(-462064379122314858L));
        f.add(new dj(-4820665401113042929L));
        f.add(new dj(5222248156543110423L));
        f.add(new dj(-609905449055850860L));
        f.add(new dj(3332112719987818141L));
        f.add(new dj(8952361124629107594L));
        f.add(new dj(-1271518531777732361L));
        f.add(new dj(5997615542119534742L));
        f.add(new dj(6072685825668517534L));
        f.add(new dj(-8675794476760359449L));
        f.add(new dj(-4471367509415780530L));
        f.add(new dj(-1592889835792564521L));
        f.add(new dj(-7350219335507525214L));
        f.add(new dj(4014933894765128613L));
        f.add(new dj(-8352908202598488638L));
        f.add(new dj(-1069703800546132420L));
        f.add(new dj(-9199022768967156824L));
        f.add(new dj(8118598563015197913L));
        f.add(new dj(-8487614827684874603L));
        f.add(new dj(-834462856724145062L));
        f.add(new dj(479781534441212006L));
        f.add(new dj(1413994889946838214L));
        f.add(new dj(1500734814910881675L));
        f.add(new dj(-3955912132548584577L));
        f.add(new dj(-9029292730360670674L));
        f.add(new dj(-3971532303776377613L));
        f.add(new dj(-8682999383915726626L));
        f.add(new dj(-799233919475742455L));
        f.add(new dj(-6991063258546292616L));
        f.add(new dj(-2624638350318725992L));
        f.add(new dj(-7460269104143616010L));
        f.add(new dj(6303783328194677049L));
        f.add(new dj(892142295489338629L));
        f.add(new dj(5277621524968074423L));
        f.add(new dj(4141169496339477867L));
        f.add(new dj(-6341585655151704069L));
        f.add(new dj(3597333270122620730L));
        f.add(new dj(-2861014552205607086L));
        f.add(new dj(1030004351404787309L));
        f.add(new dj(3314033579826052322L));
        f.add(new dj(1110074227077678751L));
        f.add(new dj(-237205330267641091L));
        f.add(new dj(-681906805528102142L));
        f.add(new dj(4842929546725535829L));
        f.add(new dj(7530598022592098202L));
        f.add(new dj(-1309030736002112574L));
        f.add(new dj(6923625601990047345L));
        f.add(new dj(4888778297996610374L));
        f.add(new dj(-5572350666988215041L));
        f.add(new dj(4538906986337640636L));
        f.add(new dj(-5750097868622238563L));
        f.add(new dj(8961571191441092598L));
        f.add(new dj(27867464695029749L));
        f.add(new dj(1252854207293394601L));
        f.add(new dj(-3154066640264745762L));
        f.add(new dj(-805495106228008659L));
        f.add(new dj(-3166411646009162756L));
        f.add(new dj(-4846184574089454689L));
        f.add(new dj(2628140263109586022L));
        f.add(new dj(-8700521154456893896L));
        f.add(new dj(1783223524330434701L));
        f.add(new dj(908689094186157029L));
        f.add(new dj(-41113226437605910L));
        f.add(new dj(2522802917741064469L));
        f.add(new dj(4179777766039334895L));
        f.add(new dj(-3797502196415989572L));
        f.add(new dj(-3215980495254851840L));
        f.add(new dj(-7790620185528944854L));
        f.add(new dj(7856600916442958218L));
        f.add(new dj(-4300821316863323077L));
        f.add(new dj(-5697183486272017663L));
        f.add(new dj(8303034954622272578L));
        f.add(new dj(4064656480529787987L));
        f.add(new dj(-1006622449902860991L));
        f.add(new dj(7516727663339401270L));
        f.add(new dj(5895964720604639487L));
        f.add(new dj(-6812458640518297336L));
        f.add(new dj(-6717497916554940765L));
        f.add(new dj(5200608171961726127L));
        f.add(new dj(8484374231281306024L));
        f.add(new dj(-1181235208533520332L));
        f.add(new dj(-4927204961552739470L));
        f.add(new dj(-6462095546790088929L));
        f.add(new dj(1996116322093583125L));
        f.add(new dj(2775705957041151796L));
        f.add(new dj(-142523668021264340L));
        f.add(new dj(-8506479181908146777L));
        f.add(new dj(7096805442522124387L));
        f.add(new dj(4172766201613125842L));
        f.add(new dj(-5459651532278892784L));
        f.add(new dj(6478609297335722419L));
        f.add(new dj(7089970607107667062L));
        f.add(new dj(8823854683185122721L));
        f.add(new dj(-1792455485164729047L));
        e = (int[]) e.clone();
        f.add(new dj(6405104108032383810L));
        f.add(new dj(-7333924394128349546L));
        f.add(new dj(5309288840270354363L));
        f.add(new dj(3432381516281991130L));
        f.add(new dj(-1338547928323874457L));
        f.add(new dj(2641691478001686188L));
        f.add(new dj(-4748292905977620447L));
        f.add(new dj(3498177217808637828L));
        f.add(new dj(424887238331908756L));
        f.add(new dj(9064035839281835080L));
        f.add(new dj(-2918494634780417244L));
        f.add(new dj(2722582993113728462L));
        f.add(new dj(2715016548857880340L));
        f.add(new dj(1944819235815707722L));
        f.add(new dj(-8948886998236741744L));
        f.add(new dj(2206060262606027274L));
        f.add(new dj(1980541076234253281L));
        f.add(new dj(-4152268394468276622L));
        f.add(new dj(5657940835591793946L));
        f.add(new dj(-5836334278942651285L));
        f.add(new dj(4855411304373874664L));
        f.add(new dj(-4920777183892132254L));
        f.add(new dj(-6852291044510099805L));
        f.add(new dj(-4321062370294641027L));
        f.add(new dj(-6331738737761156706L));
        f.add(new dj(6015017579756650277L));
        f.add(new dj(1464941797869791017L));
        f.add(new dj(8254200718866637710L));
        f.add(new dj(-8639934352879234724L));
        f.add(new dj(7581212630058039385L));
        f.add(new dj(-3842758643770483323L));
        f.add(new dj(1539774685335228104L));
        f.add(new dj(-6929127850853676472L));
        f.add(new dj(8124361443270155465L));
        f.add(new dj(6068506597646508265L));
        f.add(new dj(1983382058478575000L));
        f.add(new dj(5756906050923619470L));
        f.add(new dj(1212771566450302247L));
        f.add(new dj(-2045362526574674615L));
        f.add(new dj(2868407931102350835L));
        f.add(new dj(8130437936050089L));
        f.add(new dj(8505930542780920147L));
        f.add(new dj(1670603758812211570L));
        f.add(new dj(-6862322628895205121L));
        f.add(new dj(8763350793603127223L));
        f.add(new dj(1489015815510166185L));
        f.add(new dj(3000914850841426408L));
        f.add(new dj(-4466266772180018367L));
        f.add(new dj(-5909179106032341854L));
        f.add(new dj(-484654454951959744L));
        f.add(new dj(-865240056918264439L));
        f.add(new dj(-1280457218470522712L));
        f.add(new dj(317480577651165928L));
        f.add(new dj(7748598480968058049L));
        f.add(new dj(4467687859428289064L));
        f.add(new dj(437064913590011207L));
        f.add(new dj(-8462150697250385221L));
        f.add(new dj(-4960557786487943873L));
        f.add(new dj(885287600778783627L));
        f.add(new dj(7406283343634854061L));
        f.add(new dj(5099107886557536814L));
        f.add(new dj(8471138946989458436L));
        f.add(new dj(2110156115449405528L));
        f.add(new dj(7627972344082359205L));
        f.add(new dj(3200939305593660645L));
        f.add(new dj(-2048206777138181327L));
        f.add(new dj(2969954010371195001L));
        f.add(new dj(-2349461519780047984L));
        f.add(new dj(3833556523322627492L));
        f.add(new dj(-6088853052412893895L));
        f.add(new dj(5017785790810724811L));
        f.add(new dj(457965194435616303L));
        f.add(new dj(1332930440068253868L));
        f.add(new dj(1387781891267523993L));
        f.add(new dj(-6713413012475995053L));
        f.add(new dj(7446958934408417716L));
        f.add(new dj(5870660084426741770L));
        f.add(new dj(6537432451745296146L));
        f.add(new dj(239866312744665668L));
        f.add(new dj(-7506467782615141595L));
        f.add(new dj(-1089023000829459949L));
        f.add(new dj(3406628869212267518L));
        f.add(new dj(-4009467846204149693L));
        f.add(new dj(-6497487656269021092L));
        f.add(new dj(-1534519215939462908L));
        f.add(new dj(-516469349565453816L));
        f.add(new dj(-7797438003946938656L));
        f.add(new dj(-7694152226436075285L));
        f.add(new dj(2763038678926218717L));
        f.add(new dj(-6767068896656277030L));
        f.add(new dj(5221830632847197090L));
        f.add(new dj(7830539205376957699L));
        f.add(new dj(4243809975206407723L));
        f.add(new dj(-7062227571466268804L));
        f.add(new dj(4260804707517438609L));
        f.add(new dj(-1869895661023251555L));
        f.add(new dj(4532105585622326671L));
        f.add(new dj(8303034920263582786L));
        f.add(new dj(-7539306485299146800L));
        f.add(new dj(9223020304021526297L));
        f.add(new dj(-6923754589156036099L));
        e = (int[]) e.clone();
        f.add(new dj(7616833866682228929L));
        f.add(new dj(8247852633038910751L));
        f.add(new dj(-5135890935361001973L));
        f.add(new dj(8527648706586969304L));
        f.add(new dj(-8295092163411201925L));
        f.add(new dj(4829316375443024370L));
        f.add(new dj(599585317877586901L));
        f.add(new dj(315395160960910025L));
        f.add(new dj(-4499833584515707266L));
        f.add(new dj(2922630032718684760L));
        f.add(new dj(-2073154363374318345L));
        f.add(new dj(1159116339511683576L));
        f.add(new dj(7807030754724780053L));
        f.add(new dj(-1343969270657064768L));
        f.add(new dj(4723308282103780121L));
        f.add(new dj(-1525061497125134895L));
        f.add(new dj(1220266169420681605L));
        f.add(new dj(-3351368369906013729L));
        f.add(new dj(3364381186964197603L));
        f.add(new dj(-913873738622874531L));
        f.add(new dj(8515226037153300468L));
        f.add(new dj(-5442063974373011502L));
        f.add(new dj(6777539131221863217L));
        f.add(new dj(-6089815436919633688L));
        f.add(new dj(1558496906047960200L));
        f.add(new dj(-2784236985162334368L));
        f.add(new dj(4550683605339210485L));
        f.add(new dj(-3696418776324518596L));
        f.add(new dj(6466859496448169773L));
        f.add(new dj(6340759992738963856L));
        f.add(new dj(-5273322817866922166L));
        f.add(new dj(3014707666282854934L));
        f.add(new dj(-2457932041844695670L));
        f.add(new dj(8664835688612064320L));
        f.add(new dj(-6214330141920990722L));
        f.add(new dj(-2404604194691256190L));
        f.add(new dj(92795220750640707L));
        f.add(new dj(551074793020733933L));
        f.add(new dj(-8388440726211070210L));
        f.add(new dj(7982463011623784585L));
        f.add(new dj(7737046646026084187L));
        f.add(new dj(3523191520124859451L));
        f.add(new dj(-8482831870582257426L));
        f.add(new dj(-6519554160423135950L));
        f.add(new dj(6481387618313544754L));
        f.add(new dj(6573151149013306304L));
        f.add(new dj(2310037576226352541L));
        f.add(new dj(8743786411978103088L));
        f.add(new dj(-5572145100974586269L));
        f.add(new dj(7076330817165414552L));
        f.add(new dj(5260598340300411184L));
        f.add(new dj(8065783276234720116L));
        f.add(new dj(9098158782079446589L));
        f.add(new dj(-1830348422834474907L));
        f.add(new dj(-4880879449454671719L));
        f.add(new dj(4366279300739314922L));
        f.add(new dj(6598808667852416572L));
        f.add(new dj(-8362406536239548133L));
        f.add(new dj(-8144683714430296463L));
        f.add(new dj(678965572873585734L));
        f.add(new dj(5081093384969855596L));
        f.add(new dj(214000636984987027L));
        f.add(new dj(-9005607813076497660L));
        f.add(new dj(-5853044112205136483L));
        f.add(new dj(8425231468406895105L));
        f.add(new dj(6999724077423962064L));
        f.add(new dj(6369356847276967120L));
        f.add(new dj(5094677882196187388L));
        f.add(new dj(-3772467396688723181L));
        f.add(new dj(-8636202713333792010L));
        f.add(new dj(5277951486739195612L));
        f.add(new dj(8766021292268002133L));
        f.add(new dj(6221176491432873194L));
        f.add(new dj(8952396453538191418L));
        f.add(new dj(-4852894114611737052L));
        f.add(new dj(-1540357571436725118L));
        f.add(new dj(4122800127619928896L));
        f.add(new dj(433580657631658313L));
        f.add(new dj(-5260096965234349719L));
        f.add(new dj(-5499938244126193543L));
        f.add(new dj(4368964191939540861L));
        f.add(new dj(-3862074565625228226L));
        f.add(new dj(-5624170788267879800L));
        f.add(new dj(-7336889793870092416L));
        f.add(new dj(-7400434507465281063L));
        f.add(new dj(-4017453362922602651L));
        f.add(new dj(-7942968288485072555L));
        f.add(new dj(8658420217428965410L));
        f.add(new dj(1086717684809265253L));
        f.add(new dj(-971248065606917795L));
        f.add(new dj(7457832228884639167L));
        f.add(new dj(-8134585377901081470L));
        f.add(new dj(-3049569667087609145L));
        f.add(new dj(2465652116295856881L));
        f.add(new dj(6260894055455677736L));
        f.add(new dj(-4906564164686384500L));
        f.add(new dj(-5788175128732314384L));
        f.add(new dj(7335605462110905336L));
        f.add(new dj(4000329717254576829L));
        f.add(new dj(3631286825536920735L));
        f.add(new dj(-4404271132369915677L));
        f.add(new dj(7402729609550546528L));
        f.add(new dj(3383378139046061553L));
        f.add(new dj(7913368957330299884L));
        f.add(new dj(6598798697981104955L));
        f.add(new dj(6278093257024493402L));
        f.add(new dj(-8756999659336881623L));
        f.add(new dj(8806441854706159142L));
        f.add(new dj(7930358275282548827L));
        f.add(new dj(-167541054166504813L));
        f.add(new dj(-4490740697783990753L));
        f.add(new dj(8741923360475376818L));
        f.add(new dj(-278930849059047859L));
        f.add(new dj(3088705723429390870L));
        f.add(new dj(2525819374628953257L));
        f.add(new dj(4992352628456997753L));
        f.add(new dj(9170526163358299161L));
        f.add(new dj(3816243624664060718L));
        f.add(new dj(5703036447561121959L));
        f.add(new dj(-8741014116541319509L));
        f.add(new dj(-4987512159759642403L));
        f.add(new dj(-7608506913441982184L));
        f.add(new dj(4353714464572482250L));
        f.add(new dj(6810785151395573098L));
        f.add(new dj(59893852737801219L));
        f.add(new dj(302728050401178853L));
        f.add(new dj(7545971496105131237L));
        f.add(new dj(2957225773446159539L));
        f.add(new dj(-5932182485526895981L));
        f.add(new dj(-7589332820633288516L));
        f.add(new dj(2661397353564368272L));
        f.add(new dj(7976693394718180494L));
        f.add(new dj(6473651953839805694L));
        f.add(new dj(4509455996473200321L));
        f.add(new dj(2334453098154546029L));
        f.add(new dj(-2469130501440684439L));
        f.add(new dj(900275423030857561L));
        f.add(new dj(-5002293322198128490L));
        f.add(new dj(7971203079960407212L));
        f.add(new dj(-4311124640254705432L));
        f.add(new dj(1930261350584154966L));
        f.add(new dj(-7882479161417949923L));
        f.add(new dj(-2247329223027193998L));
        f.add(new dj(-5186807800843522616L));
        f.add(new dj(-7988670082910171875L));
        f.add(new dj(-2398517750690547860L));
        f.add(new dj(-7374279973119607027L));
        f.add(new dj(8083858807686563249L));
        f.add(new dj(84105041243668557L));
        f.add(new dj(3460600173090303756L));
        f.add(new dj(2264575018139008126L));
        f.add(new dj(-4466864360555633248L));
        f.add(new dj(-4284610282839005149L));
        f.add(new dj(5217148376109553611L));
        f.add(new dj(2690313880503113286L));
        f.add(new dj(1364254533755341830L));
        f.add(new dj(7545224053428243008L));
        f.add(new dj(317086189156268170L));
        f.add(new dj(-3792366885317431261L));
        f.add(new dj(106999797008711125L));
        f.add(new dj(6197239961764854596L));
        f.add(new dj(5098721824744423998L));
        f.add(new dj(1579080401094622720L));
        f.add(new dj(899559099322773831L));
        f.add(new dj(-6998233617475894148L));
        f.add(new dj(6615767372540457842L));
        f.add(new dj(2873056012161176354L));
        f.add(new dj(1848354114634157225L));
        f.add(new dj(-8357831547804138312L));
        f.add(new dj(2877745425974942551L));
        f.add(new dj(7255901910618408874L));
        f.add(new dj(6327004638327707106L));
        f.add(new dj(2001085271087939151L));
        f.add(new dj(2992758636167824321L));
        f.add(new dj(4020131525152468683L));
        f.add(new dj(-263340381102611733L));
        e = (int[]) e.clone();
        f.add(new dj(-6378851470030400637L));
        f.add(new dj(-8155695218246387007L));
        f.add(new dj(5747579478833126743L));
        f.add(new dj(5801244754659676527L));
        f.add(new dj(2896038878596337215L));
        f.add(new dj(-722424053913443249L));
        f.add(new dj(6006164765497141099L));
        f.add(new dj(5414820141176498759L));
        f.add(new dj(-7942968254125334185L));
        f.add(new dj(-2864240435108529116L));
        f.add(new dj(-3521199793980456032L));
        f.add(new dj(5421362190141197368L));
        f.add(new dj(7823719981833707972L));
        f.add(new dj(-4210783980584958779L));
        f.add(new dj(-2650538952151036441L));
        f.add(new dj(8333607293343391904L));
        f.add(new dj(1319027615248073341L));
        f.add(new dj(2866867817593321332L));
        f.add(new dj(-5725720164760091622L));
        f.add(new dj(-1280525334806801483L));
        f.add(new dj(-2634628225843436120L));
        f.add(new dj(-6494949383802812753L));
        f.add(new dj(6268498961296711870L));
        f.add(new dj(-1213015330840670265L));
        f.add(new dj(934893203559074712L));
        f.add(new dj(-1553312648337432023L));
        f.add(new dj(-8934526449526828998L));
        f.add(new dj(-1513092550160103932L));
        f.add(new dj(9162057436794578016L));
        f.add(new dj(-1915359874174775666L));
        f.add(new dj(-6567863049558909476L));
        f.add(new dj(4926205660000085228L));
        f.add(new dj(7709788312470391593L));
        f.add(new dj(322094329197264029L));
        f.add(new dj(-8330179632054545625L));
        f.add(new dj(-1972420495146144903L));
        f.add(new dj(1539387871962222767L));
        f.add(new dj(-7126205166465951682L));
        f.add(new dj(1413994855586018439L));
        f.add(new dj(-9188663100104608477L));
        f.add(new dj(104681462404763915L));
        f.add(new dj(9131485350675678377L));
        f.add(new dj(-2690295299691227792L));
        f.add(new dj(-2827405892637511731L));
        f.add(new dj(-1934851702901766087L));
        f.add(new dj(-5400680005236272061L));
        f.add(new dj(-1020057793385471640L));
        f.add(new dj(-6832411799920643718L));
        f.add(new dj(7569605251999466175L));
        f.add(new dj(-4929843695185345285L));
        f.add(new dj(1539815904915968686L));
        f.add(new dj(-4705789404092444748L));
        f.add(new dj(6679452726362876744L));
        f.add(new dj(1090941943753354528L));
        f.add(new dj(-9149158314358489089L));
        f.add(new dj(4410262078045612726L));
        f.add(new dj(797463757546178365L));
        f.add(new dj(-210611423821137283L));
        f.add(new dj(-1981079021899009775L));
        f.add(new dj(6946811543563940840L));
        f.add(new dj(3517216527532459415L));
        f.add(new dj(-7684286999080552227L));
        f.add(new dj(2131335795384002769L));
        f.add(new dj(5814045943548664272L));
        f.add(new dj(-1775261807642112571L));
        f.add(new dj(-6027561229007243664L));
        f.add(new dj(-1212474408534472519L));
        f.add(new dj(-1632869230094558563L));
        f.add(new dj(-1206561176102957216L));
        f.add(new dj(-7761311885984635603L));
        f.add(new dj(-3825100210332671592L));
        f.add(new dj(2519381398646349060L));
        f.add(new dj(-6398195708146873L));
        f.add(new dj(6044327259017462189L));
        f.add(new dj(6697467124871310153L));
        f.add(new dj(-1246331531687313325L));
        f.add(new dj(-1241850642428408254L));
        f.add(new dj(-3181685057630824379L));
        f.add(new dj(-6088124627095403575L));
        f.add(new dj(-6437885616237986955L));
        f.add(new dj(-757825354067564386L));
        f.add(new dj(-4655592916713109233L));
        f.add(new dj(-8828139681451620459L));
        f.add(new dj(-6751239264867648013L));
        f.add(new dj(-4011467127694420491L));
        f.add(new dj(6827254955423355087L));
        f.add(new dj(2503666223764759885L));
        f.add(new dj(7687689337218096992L));
        f.add(new dj(-6262110870308127934L));
        f.add(new dj(-4659781239981977676L));
        f.add(new dj(6868841630155597998L));
        f.add(new dj(-346768239488995043L));
        f.add(new dj(2423339004066502307L));
        f.add(new dj(3632099024394931663L));
        f.add(new dj(-88792850882323902L));
        f.add(new dj(8489861319769638565L));
        f.add(new dj(4803517934026693042L));
        f.add(new dj(-3670212385427987969L));
        f.add(new dj(-364886063066604255L));
        f.add(new dj(4273721501977808760L));
        f.add(new dj(-2999275954511954313L));
        f.add(new dj(1013561365076059380L));
        f.add(new dj(-2320392893800808827L));
        f.add(new dj(-1132184322025704365L));
        f.add(new dj(8654695707133158317L));
        f.add(new dj(6724654730301809117L));
        f.add(new dj(7658598520225074753L));
        f.add(new dj(8892570446539831079L));
        f.add(new dj(3216043371920888097L));
        f.add(new dj(8411390660961426434L));
        f.add(new dj(7958710430995687619L));
        f.add(new dj(-4366153441616772315L));
        f.add(new dj(-8668253692698377289L));
        f.add(new dj(-1209062413470127215L));
        f.add(new dj(-8079582425393456116L));
        f.add(new dj(-382627298901724092L));
        f.add(new dj(359556361979146603L));
        f.add(new dj(7855827201409938682L));
        f.add(new dj(377568172933715078L));
        f.add(new dj(-7577401563380380297L));
        f.add(new dj(5437428689501849090L));
        f.add(new dj(1754618103088810750L));
        f.add(new dj(-5718230129901533034L));
        f.add(new dj(-1506417030960721467L));
        f.add(new dj(1996119414894375827L));
        f.add(new dj(3126741642250192840L));
        f.add(new dj(-4231197692315691831L));
        f.add(new dj(6908771952569668180L));
        f.add(new dj(1414774405186603975L));
        f.add(new dj(3207592156628963612L));
        f.add(new dj(-5603031552271713038L));
        f.add(new dj(7247281640898077061L));
        f.add(new dj(3585363794936738107L));
        f.add(new dj(-2536181987891049270L));
        f.add(new dj(-6808304789956254039L));
        f.add(new dj(7079490868358106810L));
        f.add(new dj(-4544869143822250106L));
        f.add(new dj(-741605212406556040L));
        f.add(new dj(8266478997031920479L));
        f.add(new dj(-5546552814840344821L));
        f.add(new dj(519441519711582980L));
        f.add(new dj(696100505070847320L));
        f.add(new dj(-6580814314401114963L));
        f.add(new dj(8515254652431679077L));
        f.add(new dj(-4562064167917705164L));
        f.add(new dj(5729318697322045034L));
        f.add(new dj(-764787289943503287L));
        f.add(new dj(6093914367354628622L));
        f.add(new dj(4488049189905793974L));
        f.add(new dj(1427690983954427848L));
        f.add(new dj(7247325485228339698L));
        f.add(new dj(3211279772356452986L));
        f.add(new dj(-1238483642458689309L));
        f.add(new dj(-3455406875982784472L));
        f.add(new dj(8564165039154145516L));
        f.add(new dj(-8120438873378299770L));
        f.add(new dj(-8857482555242783721L));
        f.add(new dj(-4328611668851268805L));
        f.add(new dj(6949739411550168207L));
        f.add(new dj(-4096253320054872429L));
        f.add(new dj(-3298562428596146695L));
        f.add(new dj(-932942269085667325L));
        f.add(new dj(-6727214313458027499L));
        f.add(new dj(-4224372247619583537L));
        e = (int[]) e.clone();
        f.add(new dj(-2141946414747384761L));
        f.add(new dj(-8287180340697242884L));
        f.add(new dj(7048322335196076417L));
        f.add(new dj(3018334239657066477L));
        f.add(new dj(7007293242458181376L));
        f.add(new dj(-7936391588330579357L));
        f.add(new dj(1202463354981863770L));
        f.add(new dj(-187247624187344249L));
        f.add(new dj(-2682979821749510736L));
        f.add(new dj(-6354326234699084557L));
        f.add(new dj(-3809298293616635320L));
        f.add(new dj(2055095359963428667L));
        f.add(new dj(-1409304027945000680L));
        f.add(new dj(4298347200906161568L));
        f.add(new dj(-4837838410779271413L));
        f.add(new dj(-6977257526010811972L));
        f.add(new dj(2989583693861806904L));
        f.add(new dj(-6483416009460769639L));
        f.add(new dj(7083053383593525148L));
        f.add(new dj(-5250485069964608140L));
        f.add(new dj(-8623648293868370438L));
        f.add(new dj(6269975778812855394L));
        f.add(new dj(-3885054753564187071L));
        f.add(new dj(341183795987454203L));
        f.add(new dj(-2580865187919754710L));
        f.add(new dj(-3301017985390176657L));
        f.add(new dj(2697237984532781613L));
        f.add(new dj(3210329635709490082L));
        f.add(new dj(-8641278634581293015L));
        f.add(new dj(8629116862284264002L));
        f.add(new dj(-1696018288499974651L));
        f.add(new dj(-7280587268969390576L));
        f.add(new dj(4041257256542086934L));
        f.add(new dj(-4173560208318757580L));
        f.add(new dj(6378191818269739748L));
        f.add(new dj(-125569982663324897L));
        f.add(new dj(-930363344804380897L));
        f.add(new dj(6195241122438723369L));
        f.add(new dj(-7380789838796182803L));
        f.add(new dj(2344209353453712297L));
        f.add(new dj(-2277830229765505764L));
        f.add(new dj(-5143948305639394767L));
        f.add(new dj(2488110269105754911L));
        f.add(new dj(-3831104770851365110L));
        f.add(new dj(-3291632327453207087L));
        f.add(new dj(-9033687777449827984L));
        f.add(new dj(1543374191933672639L));
        f.add(new dj(-1078914032742938977L));
        f.add(new dj(-2871358767076596469L));
        f.add(new dj(7059683044679673722L));
        f.add(new dj(8364601974522248764L));
        f.add(new dj(-8157847187315444195L));
        f.add(new dj(-212189890439735679L));
        f.add(new dj(8342337499204736490L));
        f.add(new dj(6263503579378205665L));
        f.add(new dj(2981681651180287617L));
        f.add(new dj(-7870739041996532418L));
        f.add(new dj(-7734543330968260911L));
        f.add(new dj(-2526612966299507981L));
        f.add(new dj(3574289850107096832L));
        f.add(new dj(1566284144464031476L));
        f.add(new dj(5067749511553732018L));
        f.add(new dj(7791026433271158764L));
        f.add(new dj(-8711465027057447720L));
        f.add(new dj(-8656606147409052179L));
        f.add(new dj(5048334121743188575L));
        f.add(new dj(-594569452371692354L));
        f.add(new dj(3330356337963213789L));
        f.add(new dj(-112689394389331295L));
        f.add(new dj(6537503326123375468L));
        f.add(new dj(-8116207961147479611L));
        f.add(new dj(3114955410233629857L));
        f.add(new dj(-6405203900065383665L));
        f.add(new dj(-414222563811770375L));
        f.add(new dj(-7029228470698028993L));
        f.add(new dj(-6804015645207566437L));
        f.add(new dj(-7908092800125203099L));
        f.add(new dj(8685413493880024423L));
        f.add(new dj(-4666702577038297256L));
        f.add(new dj(5053085101036867945L));
        f.add(new dj(1163937382848268990L));
        f.add(new dj(-6281595231806741119L));
        f.add(new dj(-6669429927402874331L));
        f.add(new dj(488512656561681012L));
        f.add(new dj(-8203681672551912392L));
        f.add(new dj(751200562730105076L));
        f.add(new dj(-2058696385749036705L));
        f.add(new dj(-995153416107189896L));
        f.add(new dj(-777147670521777234L));
        f.add(new dj(-2760952314331043463L));
        f.add(new dj(-6088508275046461509L));
        f.add(new dj(-5979651167620259218L));
        f.add(new dj(8899935184827342339L));
        f.add(new dj(-544469570594928502L));
        f.add(new dj(8614554377741588762L));
        f.add(new dj(-2709125170314705944L));
        f.add(new dj(-1707636994355191342L));
        f.add(new dj(3561480202927205041L));
        f.add(new dj(383663391608262389L));
        f.add(new dj(3933168056460211098L));
        f.add(new dj(4833950416671791146L));
        f.add(new dj(-5188809947867533874L));
        f.add(new dj(9090879018314546947L));
        f.add(new dj(828354256742497772L));
        f.add(new dj(-6144455774011249211L));
        f.add(new dj(3958529050027602251L));
        f.add(new dj(-7334029232255794198L));
        f.add(new dj(8620220994049309036L));
        f.add(new dj(2646006192368146217L));
        f.add(new dj(7779492626072657918L));
        f.add(new dj(-2309767407998578458L));
        f.add(new dj(7046035144388122937L));
        f.add(new dj(6626674597250684740L));
        f.add(new dj(-530425101138470910L));
        e = (int[]) e.clone();
        f.add(new dj(7445373208871665813L));
        f.add(new dj(-4651829829454448390L));
        f.add(new dj(6289289521295005776L));
        f.add(new dj(-700900149289749434L));
        f.add(new dj(5259998835879839184L));
        f.add(new dj(3644121705176210850L));
        f.add(new dj(-146609968638982477L));
        f.add(new dj(-8130122720763262247L));
        f.add(new dj(-198606405142639635L));
        f.add(new dj(8230967563655488730L));
        f.add(new dj(-2632524656720802331L));
        f.add(new dj(2506327117309339042L));
        f.add(new dj(1465584324228005373L));
        f.add(new dj(-2093488023012503916L));
        f.add(new dj(729307189625383703L));
        f.add(new dj(8011484940249168271L));
        f.add(new dj(-6489813682196700024L));
        f.add(new dj(3454131712033018627L));
        f.add(new dj(8408406999475007172L));
        f.add(new dj(-4895023080931044470L));
        f.add(new dj(-9192791890500380222L));
        f.add(new dj(-7874648912045712625L));
        f.add(new dj(-5967359028528178617L));
        f.add(new dj(-4102178372089447183L));
        f.add(new dj(9070890760902556651L));
        f.add(new dj(-1553845151390145201L));
        f.add(new dj(-4558614408152863512L));
        f.add(new dj(6000708593993563377L));
        f.add(new dj(2681054066606036663L));
        f.add(new dj(7809814653052869035L));
        f.add(new dj(5543238420507192226L));
        f.add(new dj(-109834191364393241L));
        f.add(new dj(8785655508947012851L));
        f.add(new dj(974716989611181546L));
        f.add(new dj(-4541481418787348346L));
        f.add(new dj(8243074049815103934L));
        f.add(new dj(-2117318167259779184L));
        f.add(new dj(-1009468332484940093L));
        f.add(new dj(145104896913559648L));
        f.add(new dj(-8439214511611806619L));
        f.add(new dj(3812490042111217610L));
        f.add(new dj(2278098968873959890L));
        f.add(new dj(-9119292397107873555L));
        f.add(new dj(-5001904999021036184L));
        f.add(new dj(7749681492035591759L));
        f.add(new dj(6025901368058125835L));
        f.add(new dj(1892156322802301484L));
        f.add(new dj(6947408151268620209L));
        f.add(new dj(-6784164861546610844L));
        f.add(new dj(-1859268469882953038L));
        f.add(new dj(1929873067206952879L));
        f.add(new dj(-1924897948772386785L));
        f.add(new dj(-3156598306006450553L));
        f.add(new dj(3737143691218045704L));
        f.add(new dj(5837379167630626330L));
        f.add(new dj(1531974442361334681L));
        f.add(new dj(-336103674344220195L));
        f.add(new dj(7257347187556518014L));
        f.add(new dj(1185010668828231503L));
        f.add(new dj(8337018383399992155L));
        f.add(new dj(5441770941985496822L));
        f.add(new dj(2026873776858457383L));
        f.add(new dj(-487404879187365293L));
        f.add(new dj(-4052178791597126690L));
        f.add(new dj(6285514296890590681L));
        f.add(new dj(-3791500347867857772L));
        f.add(new dj(1875343762677863801L));
        f.add(new dj(373847330990017974L));
        f.add(new dj(2899825843149031653L));
        f.add(new dj(-1431853985981975827L));
        f.add(new dj(8283647755906532495L));
        f.add(new dj(6569838376302199658L));
        f.add(new dj(8472792324568260239L));
        f.add(new dj(-529655565068792479L));
        f.add(new dj(5607166384160268372L));
        f.add(new dj(3685289602762304009L));
        f.add(new dj(-201742604545843267L));
        f.add(new dj(-8603585201759141173L));
        f.add(new dj(-5594482112487742345L));
        f.add(new dj(1222810819785024407L));
        f.add(new dj(-5496772346048512848L));
        f.add(new dj(1445378915476987L));
        f.add(new dj(2310913847823863841L));
        f.add(new dj(1518358259697257600L));
        f.add(new dj(5809905954737837556L));
        f.add(new dj(5779640158300874648L));
        f.add(new dj(-5989178831273407312L));
        f.add(new dj(-6841208235232769430L));
        f.add(new dj(-8549160486059158256L));
        f.add(new dj(-2892785797251282552L));
        f.add(new dj(3577593677536935576L));
        f.add(new dj(-9148638843783611703L));
        f.add(new dj(4338390369667296560L));
        f.add(new dj(1485982198001104119L));
        f.add(new dj(4556532015929689428L));
        f.add(new dj(3255259569348861758L));
        f.add(new dj(-3552279111030958158L));
        f.add(new dj(8291103900475498155L));
        f.add(new dj(3026146438229933869L));
        f.add(new dj(-4071634549333537236L));
        f.add(new dj(-587596872185485476L));
        f.add(new dj(-4596929588632133922L));
        f.add(new dj(2567511735406982187L));
        f.add(new dj(8593607410075641226L));
        f.add(new dj(-2974861559460892738L));
        f.add(new dj(-7642394617353061675L));
        f.add(new dj(4269630307947523523L));
        f.add(new dj(-1342658657750142287L));
        f.add(new dj(-2144130487921686299L));
        f.add(new dj(5610078520409607116L));
        f.add(new dj(4996016819796501371L));
        f.add(new dj(-6879794597935735842L));
        f.add(new dj(1509377558285171455L));
        f.add(new dj(-311723713078669468L));
        f.add(new dj(8999438330510999969L));
        f.add(new dj(-2589588372532920337L));
        f.add(new dj(-2390769470633495625L));
        f.add(new dj(4753234309277301055L));
        f.add(new dj(-7750440367054393292L));
        f.add(new dj(1553813931968358379L));
        e = (int[]) e.clone();
        f.add(new dj(-5468556527709545354L));
        f.add(new dj(-3754649127194544058L));
        f.add(new dj(4618984025101852942L));
        f.add(new dj(5215561340566083937L));
        f.add(new dj(-6072139089400804271L));
        f.add(new dj(6946811577923679145L));
        f.add(new dj(-8979156677299584333L));
        f.add(new dj(3417811615439942865L));
        f.add(new dj(8764535418677163222L));
        f.add(new dj(8051819573030933372L));
        f.add(new dj(439564107758303011L));
        f.add(new dj(6588184388443059024L));
        f.add(new dj(5651892952210203578L));
        f.add(new dj(-990849057903742270L));
        f.add(new dj(1302213019981986596L));
        f.add(new dj(6182994697044155068L));
        f.add(new dj(-3789660749725136777L));
        f.add(new dj(8449429718451591528L));
        f.add(new dj(3168953863243515032L));
        f.add(new dj(-3191143684761648612L));
        f.add(new dj(134842869653074819L));
        f.add(new dj(-6086810948163259457L));
        f.add(new dj(-4523781503002496245L));
        f.add(new dj(-5672766256498387950L));
        f.add(new dj(-6068414453140235164L));
        f.add(new dj(-6972626889946393438L));
        f.add(new dj(-2903336337490308035L));
        f.add(new dj(4459595405183178791L));
        f.add(new dj(7118936453801099675L));
        f.add(new dj(2793473328901947358L));
        f.add(new dj(-2237287261079895598L));
        f.add(new dj(4590975779506593873L));
        f.add(new dj(-4002923136842088561L));
        f.add(new dj(-1471585543117538756L));
        f.add(new dj(-5040716857575054321L));
        f.add(new dj(6992056066120999618L));
        f.add(new dj(2776859594248132073L));
        f.add(new dj(8153111789231442222L));
        f.add(new dj(5822604860341448209L));
        f.add(new dj(3241614226306810334L));
        f.add(new dj(1356605097517225682L));
        f.add(new dj(-7940229785478533137L));
        f.add(new dj(-6685051001004491345L));
        f.add(new dj(8339907065132962258L));
        f.add(new dj(5657019241375232676L));
        f.add(new dj(-7573182418394570823L));
        f.add(new dj(-8986286470591190894L));
        f.add(new dj(2070921094432497047L));
        f.add(new dj(5621143183145444772L));
        f.add(new dj(342143616474483491L));
        f.add(new dj(8884055184671519812L));
        f.add(new dj(6463801837559924532L));
        f.add(new dj(8313830116987078699L));
        f.add(new dj(-3937784275094961566L));
        f.add(new dj(-400879240435024504L));
        f.add(new dj(3000432706202334556L));
        f.add(new dj(5482893223599756435L));
        f.add(new dj(1331242100934988436L));
        f.add(new dj(-7838581430058221753L));
        f.add(new dj(8994153690170525031L));
        f.add(new dj(-7939164829765847206L));
        f.add(new dj(-9070663295300766346L));
        f.add(new dj(7192215177342922118L));
        f.add(new dj(7555859705616598456L));
        f.add(new dj(-395927224707664714L));
        f.add(new dj(-6776776070846907959L));
        f.add(new dj(5902431097828215490L));
        f.add(new dj(8620961030088480539L));
        f.add(new dj(-5357826823010250454L));
        f.add(new dj(690186040863421187L));
        f.add(new dj(1815655256092355438L));
        f.add(new dj(9046013309656058981L));
        f.add(new dj(2085533636232354218L));
        f.add(new dj(4143671670439891280L));
        f.add(new dj(-4833834710843980742L));
        f.add(new dj(-1355778185100967157L));
        f.add(new dj(911290835965183637L));
        f.add(new dj(-5351678458343866078L));
        f.add(new dj(-5305692891572535784L));
        f.add(new dj(2136370613803324763L));
        f.add(new dj(210021423790700782L));
        f.add(new dj(5880055318386728564L));
        f.add(new dj(7883203507978027383L));
        f.add(new dj(232146523364196818L));
        f.add(new dj(-8612462612350579208L));
        f.add(new dj(-310384055872391114L));
        f.add(new dj(-8032797167272491810L));
        f.add(new dj(686838495816409693L));
        f.add(new dj(5768809741663250690L));
        f.add(new dj(5790893953357567447L));
        f.add(new dj(6965147617707330586L));
        f.add(new dj(8065982919123348163L));
        f.add(new dj(8595271641804087354L));
        f.add(new dj(7042442580710224783L));
        f.add(new dj(7303835171963258716L));
        f.add(new dj(710243445597030644L));
        f.add(new dj(-8088390792357948754L));
        f.add(new dj(-5545397017163283390L));
        f.add(new dj(5718835761584413834L));
        f.add(new dj(-3153805438093395280L));
        f.add(new dj(-4160409443228381901L));
        f.add(new dj(-8110685577830202064L));
        f.add(new dj(5835374061111073749L));
        f.add(new dj(-2325719192948724921L));
        f.add(new dj(8309848774531171549L));
        f.add(new dj(-4504408803910655615L));
        f.add(new dj(-8861098987512544773L));
        f.add(new dj(-7962919161143559017L));
        f.add(new dj(556560821495612821L));
        f.add(new dj(-5444775000223527688L));
        f.add(new dj(8354634849054388616L));
        f.add(new dj(-7761308678582742807L));
        f.add(new dj(-7444366393786546962L));
        f.add(new dj(-7193719231385576645L));
        f.add(new dj(-508087063306771126L));
        f.add(new dj(-8825610243684083944L));
        f.add(new dj(-352923779289642022L));
        f.add(new dj(2870780591575239756L));
        f.add(new dj(-1495469745309963441L));
        f.add(new dj(4350945821239669939L));
        f.add(new dj(8801136500791580727L));
        f.add(new dj(2690669033270488219L));
        f.add(new dj(-1707636959994404463L));
        f.add(new dj(2010508988171376015L));
        f.add(new dj(1319599997137201822L));
        f.add(new dj(-4670822236678889752L));
        f.add(new dj(6416906558942102212L));
        f.add(new dj(4927758601696710161L));
        f.add(new dj(-7433887503464960669L));
        f.add(new dj(-2703243539438556792L));
        f.add(new dj(9010792894789301768L));
        f.add(new dj(-1656122147640720877L));
        f.add(new dj(-3637674427532275763L));
        f.add(new dj(-5512194401983917737L));
        f.add(new dj(1364951071229844223L));
        f.add(new dj(3993185014724579020L));
        f.add(new dj(-7704742383710611084L));
        f.add(new dj(-9073016919253548454L));
        f.add(new dj(5838783184938457994L));
        f.add(new dj(-2854033792361527408L));
        f.add(new dj(6258117515560379066L));
        f.add(new dj(5487427981354497733L));
        f.add(new dj(6400988499166266038L));
        f.add(new dj(1639080502001087788L));
        f.add(new dj(7587767083614744145L));
        f.add(new dj(7538888401131507104L));
        f.add(new dj(-5497205128703029288L));
        f.add(new dj(2599612745761311065L));
        f.add(new dj(837396156184745875L));
        e = (int[]) e.clone();
        f.add(new dj(2908384057748158927L));
        f.add(new dj(1364807331095199774L));
        f.add(new dj(4195466333083286574L));
        f.add(new dj(8156408821646268726L));
        f.add(new dj(-1659640332869688951L));
        f.add(new dj(6901425830177139221L));
        f.add(new dj(-6581403249541500646L));
        f.add(new dj(3903786977000910152L));
        f.add(new dj(-3222641524235493464L));
        f.add(new dj(-6012535528222187907L));
        f.add(new dj(2746355576720722905L));
        f.add(new dj(8767635272316878583L));
        f.add(new dj(-1282177080625211421L));
        f.add(new dj(7016763032407674852L));
        e = new int[]{-40, -23, -21, -56, -26, -24, -13, -32, -27, -9, -47, -23, -41, -34, -22, -23, -9, -35, 9, 13, -24, -34, -15, 21, 23, 9, -23, -6, -22, 24, 26, -14, -22, 6, 23, 27, 22, 15, 23, 32, 40, -21, -18, -5, 24, 14, -12, 34, 5, 23, 22, -10, 35, 41, 22, 34, -7, 47, 12, 56, 18, 10, 21, 7};
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public static void b(di diVar) {
        c();
        e = r0;
        int[] iArr = {-60, -32, -16, -40, -1, 1, -17, -7, -27, -50, -29, -35, -26, -29, 7, -42, -46, -35, 16, -10, -1, 1, -10, 17, -23, -30, -18, -23, -3, 10, -19, 3, 10, 32, -22, 27, -12, -16, 26, 29, -21, -22, 29, 40, 18, -13, 35, 23, 12, 19, 23, -3, 35, 16, 3, 30, 22, 42, 13, 50, 60, 21, 46, 22};
        diVar.c();
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public static dh c(long j) {
        int a = (int) a(j, h, 63, e, k);
        if (a < i) {
            return (dh) f.get(a);
        }
        if (f.size() % l == 0) {
            e = (int[]) e.clone();
        }
        dj djVar = new dj(j);
        f.add(djVar);
        return djVar;
    }

    private static void c() {
        a(0, f.size() - 1, f, new ArrayList(f), 0);
    }

    private static dh d(long j) {
        return new dj(j);
    }

    public static Object g() {
        return o;
    }

    @Override // com.trossense.dh
    public long a(long j) {
        long a = a(8, 55);
        this.a ^= this.d ^ j;
        dh dhVar = this.c;
        if (dhVar != null) {
            dhVar.a(j);
        }
        return a;
    }

    @Override // com.trossense.dh
    public void a(dh dhVar) {
        if (this != dhVar) {
            dh dhVar2 = this.c;
            if (dhVar2 == null) {
                this.c = dhVar;
            } else {
                dhVar2.a(dhVar);
            }
        }
    }

    @Override // com.trossense.dh
    public void b(long j) {
        this.d = j;
    }

    @Override // com.trossense.dh
    public boolean b(dh dhVar) {
        return this == dhVar || !(dhVar instanceof dj) || a(56, 63) - ((dj) dhVar).a(56, 63) <= 0;
    }

    @Override // com.trossense.dh
    public int[] b() {
        return this.b;
    }

    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        return (obj instanceof dj) && a(56) == ((dj) obj).a(56);
    }

    public int hashCode() {
        return (int) a(8);
    }
}
